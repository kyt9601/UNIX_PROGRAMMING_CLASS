


directory tree (내부 디렉토리까지 탐색)
path에서 시작해서 recursive하게 subdirectory와 file들
에 func() 함수를 적용;

#include <ftw.h>
int ftw(const char *path, int(*func)(), int depth); 

depth : ftw에 의해 사용 가능한 file descriptor의 수

사용법 :
 ◦ int func (const char *name, const struct stat *sptr, int type){ }
  name := target object의 이름;
  sptr := object에 대한 자료가 저장된 stat에 대한 pointer;
  type :=
 FTW_F object가 file
 FTW_D object가 directory
 FTW_DNR object는 읽을 수 없는 directory
 FTW_NS object는 ?
 ◦ 함수가 0이 아닌 return값을 가지거나, error 발생하면 중단; 

#include <sys/stat.h>
#include <ftw.h>
int list(const char * name,
    const struct stat * status, int type) {
    if (type == FTW_NS)
        return 0;
    if (type == FTW_F)
        printf(“ % -30 s\ t0 % 3 o\ n”, name, status - > st_mode & 0777);
    else
        printf(“ % -30 s * \t0 % 3 o\ n”, name, status - > st_mode & 0777);
    return 0;
}
int main() {
    ftw(“.”, list, 1);
    return 0;
}


